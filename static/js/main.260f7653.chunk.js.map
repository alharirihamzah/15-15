{"version":3,"sources":["components/Clock/style.js","components/Clock/Clock.jsx","components/Quotes/style.js","components/Quotes/Quotes.jsx","components/Weather/style.js","components/Weather/Weather.jsx","App/style.js","App/App.jsx","index.js"],"names":["Wrapper","styled","div","TopWrapper","HiddenText","p","neon","keyframes","TimeWrapper","active","css","TimeText","separator","BottomWrapper","DateWrapper","DateText","Clock","useState","setActive","currentTime","setCurrentTime","audioRef","useRef","useEffect","getTime","setInterval","playSound","setTimeout","current","play","newTime","moment","toISOString","get","hours","minutes","length","clockParts","datePart","format","onClick","map","part","idx","key","ref","src","type","InnerWrapper","QuoteText","QuoteAuthor","Quotes","quote","setQuote","getRandomQuote","fetch","then","response","json","result","text","en","author","catch","error","console","log","ColumnWraper","Icon","img","Description","Temp","Weather","data","setData","getWeatherData","Array","isArray","weatherPayload","buildWeatherPayload","payload","WeatherIcon","WeatherText","Temperature","icon","temp","Metric","Value","descriptions","alt","replace","AppWrapper","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.260f7653.chunk.js","sourcesContent":["import styled, { css, keyframes } from 'styled-components'\n\nconst Wrapper = styled.div`\n    flex: 1;\n    display: flex;\n    overflow: hidden;\n    background: #434954;\n    flex-direction: column;\n    border-bottom: 2px solid #404551;\n`\n\nconst TopWrapper = styled.div`\n    width: 100%;\n    margin: auto auto 0 auto;\n`\n\nconst HiddenText = styled.p`\n    top: 10px;\n    opacity: 0;\n    right: 20px;\n    cursor: pointer;\n    position: absolute;\n\n    &:hover {\n        opacity: 1;\n    }\n`\n\nconst neon = keyframes`\n    from {\n        text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #fff, 0 0 40px #228DFF, 0 0 70px #228DFF, 0 0 80px #228DFF, 0 0 100px #228DFF, 0 0 150px #228DFF;\n    }\n    to {\n        text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #fff, 0 0 20px #228DFF, 0 0 35px #228DFF, 0 0 40px #228DFF, 0 0 50px #228DFF, 0 0 75px #228DFF;\n    }\n`\n\nconst TimeWrapper = styled.div`\n    flex: 3;\n    margin: auto;\n    display: flex;\n    \n    p {\n        &:first-child {\n            margin-left: auto;\n        }\n    \n        &:last-child {\n            margin-right: auto;\n        }\n\n        ${({active}) => active && css`\n            animation: ${neon} 1.5s ease-in-out infinite alternate;\n        `}\n    }\n`\n\nconst TimeText = styled.p`\n    margin: 0;\n    color: #fff;\n    display: flex;\n    min-width: 27%;\n    font-size: 20vw;\n    font-weight: 600;\n    transition: all 0.5s;\n    justify-content: center;\n\n    ${({separator}) => separator && css`\n        min-width: unset;\n        margin-top: -10px;\n    `}\n`\n\nconst BottomWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    margin: 0 auto auto auto;\n`\n\nconst DateWrapper = styled.div`\n    margin: auto;\n    display: flex;\n`\n\nconst DateText = styled.p`\n    margin: 0;\n    color: #fff;\n    font-size: 3vw;\n    font-weight: 600;\n`\n\nexport {\n    Wrapper,\n    TopWrapper,\n    HiddenText,\n    TimeText,\n    TimeWrapper,\n    BottomWrapper,\n    DateWrapper,\n    DateText\n}","import React, {\n    useRef,\n    useState,\n    useEffect\n} from 'react'\n\nimport moment from 'moment'\n\nimport {\n    Wrapper,\n    TopWrapper,\n    HiddenText,\n    TimeWrapper,\n    TimeText,\n    BottomWrapper,\n    DateWrapper,\n    DateText\n} from './style'\n\nconst ONE_SEC = 1000\nconst ONE_MIN = 60000\nconst SOUND_SRC = 'https://www.myinstants.com/media/sounds/dj-airhorn-sound-effect-kingbeatz_1.mp3'\n\nconst Clock = () => {\n    const [active, setActive] = useState(false)\n    const [currentTime, setCurrentTime] = useState(null)\n\n    const audioRef = useRef()\n\n    useEffect(() => {\n        getTime()\n\n        setInterval(() => {\n            getTime()\n        }, ONE_SEC)\n    }, [])\n\n    useEffect(() => {\n        if (active) {\n            playSound()\n\n            setTimeout(() => {\n                playSound()\n            }, 5000)\n        }\n    }, [active])\n\n    const playSound = () => {\n        audioRef.current.play()\n    }\n\n    const getTime = () => {\n        const newTime = moment().toISOString()\n\n        if (moment(newTime).get('h') === 15 && moment(newTime).get('m') === 15) {\n            setActive(true)\n\n            setTimeout(() => {\n                setActive(false)\n            }, ONE_MIN)\n        }\n\n        setCurrentTime(newTime)\n    }\n\n    const testSound = () => {\n        playSound()\n    }\n\n    if (currentTime) {\n        let hours = `${moment(currentTime).get('h')}`\n        let minutes = `${moment(currentTime).get('m')}`\n\n        if (hours.length === 1) {\n            hours = `0${hours}`\n        }\n\n        if (minutes.length === 1) {\n            minutes = `0${minutes}`\n        }\n\n        const clockParts = [\n            hours,\n            ':',\n            minutes\n        ]\n    \n        const datePart = moment(currentTime).format('dddd D MMM YY')\n    \n        return (\n            <Wrapper>\n                <TopWrapper>\n                    <HiddenText onClick={testSound}>\n                        Test\n                    </HiddenText>\n\n                    <TimeWrapper active={active}>\n                        {\n                            clockParts.map((part, idx) => {\n                                return (\n                                    <TimeText\n                                        key={idx}\n                                        separator={idx%2 !== 0}\n                                    >\n                                        {part}\n                                    </TimeText>\n                                )\n                            })\n                        }\n                    </TimeWrapper>\n                </TopWrapper>\n                \n                <BottomWrapper>\n                    <DateWrapper>\n                        <DateText>\n                            {datePart}\n                        </DateText>\n                    </DateWrapper>\n                </BottomWrapper>\n\n                <audio\n                    ref={audioRef}\n                    src={SOUND_SRC}\n                    type={'audio/mp3'}\n                />\n            </Wrapper>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Clock","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    flex: 1;\n    padding: 20px;\n    display: flex;\n    overflow: hidden;\n    background: #434954;\n    flex-direction: column;\n`\n\nconst InnerWrapper = styled.div`\n    width: 75%;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n`\n\nconst QuoteText = styled.p`\n    color: #fff;\n    margin-top: 0;\n    font-weight: 500;\n    font-size: 1.5vw;\n`\n\nconst QuoteAuthor = styled.p`\n    color: #fff;\n    font-weight: 500;\n    font-size: 1.5vw;\n    font-style: italic;\n    margin: 0 0 0 auto;\n`\n\nexport {\n    Wrapper,\n    InnerWrapper,\n    QuoteText,\n    QuoteAuthor\n}","import React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport {\n    Wrapper,\n    InnerWrapper,\n    QuoteText,\n    QuoteAuthor\n} from './style'\n\nconst ONE_MIN = 60000\n\nconst Quotes = () => {\n    const [quote, setQuote] = useState(null)\n\n    useEffect(() => {\n        getRandomQuote()\n\n        setInterval(() => {\n            getRandomQuote()\n        }, ONE_MIN)\n    }, [])\n\n    const getRandomQuote = () => {\n        fetch('https://programming-quotes-api.herokuapp.com/quotes/random/lang/en')\n            .then(response => response.json())\n            .then(result => {\n                setQuote({\n                    text: result.en,\n                    author: result.author\n                })\n            }).catch(error => {\n                console.log('OUTPUT: getRandomQuote -> error', error)\n\n                setQuote(null)\n            })\n    }\n\n    if (quote) {\n        return (\n            <Wrapper>\n                <InnerWrapper>\n                    <QuoteText>\n                        \"{quote.text}\"\n                    </QuoteText>\n\n                    <QuoteAuthor>\n                        ~{quote.author}\n                    </QuoteAuthor>\n                </InnerWrapper>\n            </Wrapper>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Quotes","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    display: flex;\n    overflow: hidden;\n    padding: 30px 50px;\n    background: #434954;\n    border-right: 2px solid #404551;\n`\n\nconst ColumnWraper = styled.div`\n    flex: 1;\n    margin: 35px;\n    display: flex;\n    margin-right: 0;\n    flex-direction: column;\n`\n\nconst Icon = styled.img`\n    width: 50%;\n    height: auto;\n    margin: auto;\n    border-radius: 50%;\n`\n\nconst Description = styled.p`\n    margin: 0;\n    color: #fff;\n    font-size: 2vw;\n    font-weight: 500;\n`\n\nconst InnerWrapper = styled.div`\n    width: 75%;\n    margin: auto;\n    display: flex;\n    flex-direction: column;\n`\n\nconst Temp = styled.p`\n    color: #fff;\n    margin: auto;\n    font-size: 4vw;\n    font-weight: 600;\n    padding: 0px 50px;\n`\n\nconst RowWrapper = styled.div`\n    display: flex;\n    margin-bottom: 5px;\n`\n\nconst RowLabel = styled.p`\n    margin: 0;\n    color: #fff;\n    font-size: 1.2vw;\n    font-weight: 600;\n`\n\nconst RowValue = styled.p`\n    margin: 0;\n    color: #fff;\n    font-size: 1.2vw;\n    font-weight: 400;\n    margin-left: 10px;\n`\n\nexport {\n    Wrapper,\n    ColumnWraper,\n    Icon,\n    Description,\n    Temp,\n    InnerWrapper,\n    RowWrapper,\n    RowLabel,\n    RowValue\n}","import React, {\n    useState,\n    useEffect\n} from 'react'\n\nimport {\n    Wrapper,\n    ColumnWraper,\n    Icon,\n    Description,\n    Temp,\n    InnerWrapper,\n    RowWrapper,\n    RowLabel,\n    RowValue\n} from './style'\n\n// const CITY = 'kalmar'\nconst CITY_KEY = 308266\nconst TWELVE_HOURS = 60000 * 60 * 6\n// const ACCESS_KEY = 'd35f9538c1106637eb2baf799519ee08'\nconst ACCESS_KEY = '4qEsaEEVHzWeu62poAuWYVflLsZtOHLV'\nconst ICON_SRC = 'https://apidev.accuweather.com/developers/Media/Default/WeatherIcons/{{NUMBER}}-s.png'\n\nconst Weather = () => {\n    const [data, setData] = useState(null)\n\n    useEffect(() => {\n        getWeatherData()\n\n        setInterval(() => {\n            getWeatherData()\n        }, TWELVE_HOURS)\n    }, [])\n\n    const getWeatherData = () => {\n        // fetch(`http://api.weatherstack.com/current?access_key=${ACCESS_KEY}&query=${CITY}`)\n        fetch(`https://dataservice.accuweather.com/currentconditions/v1/${CITY_KEY}?apikey=${ACCESS_KEY}`)\n            .then(response => response.json())\n            .then(result => {\n                if (Array.isArray(result) && result.length) {\n                    const weatherPayload = buildWeatherPayload(result[0])\n                    setData(weatherPayload)\n                }\n            }).catch(error => {\n                console.log('OUTPUT: getWeatherData -> error', error)\n\n                setData(null)\n            })\n    }\n\n    const buildWeatherPayload = payload => {        \n        const {\n            WeatherIcon,\n            WeatherText,\n            Temperature,\n        } = payload\n\n        const icon = `${WeatherIcon}`.length === 1 ? `0${WeatherIcon}` : `${WeatherIcon}`\n        const temp = Temperature && Temperature.Metric ? Temperature.Metric.Value : null\n\n        const weatherPayload = {\n            icon: icon,\n            temp: temp,\n            descriptions: WeatherText\n        }\n\n        return weatherPayload\n    }\n\n    if (data) {\n        return (\n            <Wrapper>\n                <ColumnWraper>\n                    {\n                        data.icon && (\n                            <Icon\n                                alt={data.descriptions}\n                                src={ICON_SRC.replace('{{NUMBER}}', data.icon)}\n                            />\n                        )\n                    }\n\n                    <Description>{data.descriptions}</Description>\n                </ColumnWraper>\n\n                <Temp>{data.temp}°C</Temp>\n\n                {/* <InnerWrapper>\n                    <RowWrapper>\n                        <RowLabel>Wind: </RowLabel>\n                        <RowValue>{data.windSpeed} kmph - {data.windDir}</RowValue>\n                    </RowWrapper>\n\n                    <RowWrapper>\n                        <RowLabel>Precip: </RowLabel>\n                        <RowValue>{data.precip} mm</RowValue>\n                    </RowWrapper>\n\n                    <RowWrapper>\n                        <RowLabel>Pressure: </RowLabel>\n                        <RowValue>{data.pressure} mb</RowValue>\n                    </RowWrapper>\n                </InnerWrapper> */}\n            </Wrapper>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default Weather","import styled from 'styled-components'\n\nconst AppWrapper = styled.div`\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    position: absolute;\n    background: #434954;\n`\n\nconst InnerWrapper = styled.div`\n    flex: 1;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`\n\nconst Wrapper = styled.div`\n    width: 1;\n    display: flex;\n`\n\nexport {\n    AppWrapper,\n    InnerWrapper,\n    Wrapper\n}","import React from 'react'\n\nimport Clock from '../components/Clock'\nimport Quotes from '../components/Quotes'\nimport Weather from '../components/Weather'\n\nimport {\n    AppWrapper,\n    InnerWrapper,\n    Wrapper\n} from './style'\n\nconst App = () => {\n    return (\n        <AppWrapper>\n            <InnerWrapper>\n                <Clock />\n\n                <Wrapper>\n                    <Weather />\n                    <Quotes />\n                </Wrapper>\n            </InnerWrapper>\n        </AppWrapper>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}